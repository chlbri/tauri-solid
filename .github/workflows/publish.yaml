name: Release
on:
  push:
    branches:
      - master
      - main
      - dev

jobs:

  tag:
    runs-on: ubuntu-latest
    outputs: 
      tag: ${{steps.tag_version.outputs.new_tag}}

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Display tag
        run: echo ${{steps.tag_version.outputs.new_tag}}

  release:
    needs: 
      - tag
    strategy:
      fail-fast: true
      matrix:
        platform: 
         - macos-latest
         - ubuntu-latest 
         - windows-latest
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.2.2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with: 
          workspaces: src-tauri

      - name: Setup tauri cache
        uses: actions/cache@v3
        with:
          path: '**/src-tauri/target'
          key: ${{ runner.os }}-tauri-store-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-tauri-store-

      - name: Install app dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the app
        uses: tauri-apps/tauri-action@v0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ needs.tag.outputs.tag }}
          releaseName: ${{ needs.tag.outputs.tag }}
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
      
      - name: END
        run: echo 'Goodbye, everything is done !'
          
