name: Release
on:
  push:
    branches:
      - master
      - main
      - dev
    

jobs:
  release:
    strategy:
      fail-fast: true
      matrix:
        platform: 
         - macos-latest
        #  - ubuntu-latest 
        #  - windows-latest

    runs-on: ${{ matrix.platform }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            ${{ runner.os }}-

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Install app dependencies
        run: pnpm install --frozen-lockfile

      # - name: Extract tag name
      #   id: tag
      #   uses: actions/github-script@0.2.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       return context.payload.ref.replace(/\/refs\/tags\//, '');
      
      # - name: Upload binaries to release (Mac OS)
      #   if: matrix.platform == 'macos-latest'
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: './src-tauri/target/release/bundle/macos/${{ github.event.repository.name }}.app'
      #     tag: ${{ steps.tag_version.outputs.new_tag }}
      #     overwrite: true
      #     body: "Mac OS"

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ steps.tag_version.outputs.new_tag }} # tauri-action replaces \_\_VERSION\_\_ with the app version
          releaseName: ${{ steps.tag_version.outputs.new_tag }}
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false